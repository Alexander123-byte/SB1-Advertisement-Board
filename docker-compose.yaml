version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 15
    ports:
      - "5432:5432"

  ads:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./sb1:/app
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      SECRET_KEY: ${SECRET_KEY}
      APP_PORT: 8001
    ports:
      - "8001:8001"

  users:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./sb1:/app
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      SECRET_KEY: ${SECRET_KEY}
      APP_PORT: 8002
    ports:
      - "8002:8002"

  frontend:
    build: ./frontend_react/
    volumes:
      - frontend:/app/build

  nginx:
    image: nginx:1.19.3
    ports:
      - "8000:8000"
    volumes:
      - ./django_static/:/usr/share/nginx/html/django_static/
      - ./django_media/:/usr/share/nginx/html/django_media/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/usr/share/nginx/html/
    restart: always
    depends_on:
      - frontend
      - ads
      - users

volumes:
  postgres_data:
  frontend:
